@using com.web.ViewModels;

@model com.web.ViewModels.ShopViewModel

@{
    ViewBag.Title = "Index";
 }

<!-- Page title -->
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Slidebar Shop</h1>
                </div><!-- /.page-title-heading -->
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index","Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Search …" value="" name="searchTerm">
                            </label>
                            <input type="submit" class="search-submit" value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a href="@Url.Action("Index","Shop", new { sortBy = (int) SortByEnum.Default } )" style="@( Model.SortBy.HasValue ? Model.SortBy.Value == (int) SortByEnum.Default ? "active-sortby" : string.Empty : string.Empty  )">Default</a></li>
                            
                            <li><a href="@Url.Action("Index","Shop", new { sortBy = (int) SortByEnum.Default } )" style="@( Model.SortBy.HasValue ? Model.SortBy.Value == (int) SortByEnum.Popularity ? "color: #f63440;" : string.Empty : string.Empty ) ">Popularity</a></li>
                            
                            <li><a href='@Url.Action("Index","Shop", new { sortBy = (int) SortByEnum.PriceLowToHigh })' style='@( Model.SortBy.HasValue ? Model.SortBy.Value == (int) SortByEnum.PriceLowToHigh ? "color: #f63440;" :string.Empty :string.Empty )' >Price: low to high</a></li>
                            
                            <li><a href='@Url.Action("Index","Shop", new { sortBy = (int) SortByEnum.PriceHighToLow })' style='@( Model.SortBy.HasValue ? Model.SortBy.Value == (int) SortByEnum.PriceHighToLow ? "color: #f63440;" :string.Empty :string.Empty )' >Price: high to low</a></li>
                        </ul>
                    </div><!-- /.widget-sort-by -->
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="price-slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div>
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Featured  Categories
                        </h5>
                        <div class="tag-list">
                            <a href="#" class="active" >Featured Categories</a>
                            @foreach (var item in Model.FeaturedCategories)
                             {
                                <a href="@Url.Action("Index", "Shop", new { categoryID = item.ID })"> @item.Name </a>
                             }
                        </div>
                    </div><!-- /.widget -->
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
            <div class="col-md-9">
                <div class="filter-shop clearfix">
                    <p class="showing-product float-right">
                        Showing 1–12 of 56 Products
                    </p>
                </div><!-- /.filte-shop -->
                <div id="filterProduct">
                    @{
                        var _Filter = new FilterProductsViewModel();

                        _Filter.Products = Model.Products;

                        Html.RenderPartial("FilterProducts", _Filter);
                     }
                </div>
                <div class="product-pagination text-center clearfix">
                    <ul class="flat-pagination">
                        <li class="prev">
                            <a href="#"><i class="fa fa-angle-left"></i></a>
                        </li>
                        <li><a href="#">1</a></li>
                        <li class="active"><a href="#" title="">2</a></li>
                        <li><a href="#">3</a></li>
                        <li><a href="#"><i class="fa fa-angle-right"></i></a></li>
                    </ul><!-- /.flat-pagination -->
                </div>
            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->

<script type="text/javascript">

    var priceSlider = $('#price-slide-range').slider({
        range : true,
        min : 0,
        max: @Model.MaxPrice,
        values : [0, @Model.MaxPrice],
        slide: function (event, ui)
        {
            var _min = ui.values[0];
            var _max = ui.values[1];
            
            $("#amount").val("$" + _min + ".00" + _max + ".00");

            setTimeout(GetData, 2000);
        }
    });

    function GetData() {

            $.ajax({
                url: '@Url.Action("FilterProducts","Shop")',
                data:
                {
                    minPrice: priceSlider.slider("values", 0),
                    maxPrice: priceSlider.slider("values", 1)
                }
            })
            .done(function (response)
            {
                $('#filterProduct').html(response);
            })
            .fail(function ()
            {
                alert('failed');
            });
    }
    $("body").on("sl")
</script>